rm(list = ls(all.names = TRUE))
gc()
library("rms")
library("dplyr")
library("tidyr")
library("readr")
library("plotly")
library("ggplot2")
path = "D:/GitHub/Paxlovid_MathematicalModel"
pob_input <- read.csv(paste(path, "big_data/COVID_transform_2022_v9.csv", sep = "/"))
pob_input$symptoms_date <-as.Date(pob_input$symptoms_date)
pob_input$admission_date<-as.Date(pob_input$admission_date)
pob_input$death_date    <-as.Date(pob_input$death_date)
pob_input$antiviral_date<-as.Date(pob_input$antiviral_date)
str(pob_input)
#GENERAL DATA
pob_covid <- pob_input[pob_input$covid==1, ]
nrow(pob_covid)
prop.table(table(pob_input$covid))
#DISTRIBUTION AGE
hist(pob_covid$age)
hist(pob_input$age)
summary(pob_input$age)
summary(pob_covid$age)
quantile(pob_covid$age, c(0.10, 0.90))
#DISTRIBUTIOON SEX
prop.table(table(pob_input$sex))
prop.table(table(pob_covid$sex))
#SEPAS DE COVID
round(100*prop.table(table(pob_covid$diagnostic_result)),2)
morbidities <- c("obesity", "diabetes", "hyperten","ckd",
"cardio","copd", "asthma", "immuno", "hiv")
100*sort(colMeans(pob_covid[,morbidities]))
100*sort(colMeans(pob_input[,morbidities]))
#Admission date ???
summary(as.numeric(pob_input$admission_date-pob_input$symptoms_date))
hist(as.numeric(pob_input$admission_date-pob_input$symptoms_date))
#Outliers
pob_input[as.numeric(pob_input$admission_date-pob_input$symptoms_date)>300,]
pob_input[pob_input$antiviral_date>=as.Date("2023-01-01"), ]
#DISTRIBUTION PATIENT TYPE
prop.table(table(pob_input$patient_type))
prop.table(table(pob_covid$patient_type))
#DEATH RATE
100*prop.table(table(pob_covid$death))
summary(pob_covid$time[pob_covid$time!=999])
hist(pob_covid$time[pob_covid$time!=999])
death_per_month =round(100*prop.table(table(format(pob_covid$death_date,'%m'))),2)
cumsum(death_per_month)
rm(list = ls(all.names = TRUE))
gc()
library("rms")
library("dplyr")
library("tidyr")
library("readr")
#Datasets gold
path = "D:/GitHub/Paxlovid_MathematicalModel"
df_pob <- read.csv(paste(path, "big_data/COVID_transform_2022_v9_p2.csv", sep = "/"))
df_counts<-read.csv(paste(path, "data/SUMMARY_SINAVE_2022.csv", sep="/"))
df_sim <- read.csv(paste(path, "data/Bernoulli_Full_Simulation.csv",sep="/"))
morbidities <- c("obesity", "diabetes", "hyperten","ckd",
"cardio","copd", "asma", "immuno", "hiv")
covars      <- c("comorbidity", "binary_patient_type", "covid", "death")
classification_vars <- c("age_group_s","age", "sex")
df_pob$comorbidity <- as.integer(apply(df_pob[,morbidities]==1, 1, any))
names(df)
names(df_pob)
morbidities <- c("obesity", "diabetes", "hyperten","ckd",
"cardio","copd", "asthma", "immuno", "hiv")
covars      <- c("comorbidity", "binary_patient_type", "covid", "death")
classification_vars <- c("age_group_s","age", "sex")
df_pob$comorbidity <- as.integer(apply(df_pob[,morbidities]==1, 1, any))
names(df_pob)
#Validacion del dataset real
df_pob$binary_patient_type <- as.integer(ifelse(df_pob$patient_type=="H", 1,0))
df_pob$age_group_s    <- cut(df_pob$age, breaks=c(0, 18, 50, 65, Inf), right=FALSE)
#Conteo por sexo
df_pob2 <- df_pob[df_pob$age>=18, c(classification_vars,covars)]
df_pob2%>% group_by(sex) %>% dplyr::summarize(count=n())
df_pob2 <- df_pob2%>% group_by(sex,age_group_s) %>%
dplyr::summarize( count = n(),
prob_comorbidity = mean(comorbidity),
prob_covid       = mean(covid),
prob_hospital    = mean(binary_patient_type),
prob_death       = mean(death),
.groups ='drop')
df_pob2
View(df_pob2)
df_pob2
View(df_pob2)
write.csv(df_pob2,
paste(path, "data/val_sinave.csv", sep = "/"))
#Validacion de la simulaci√≥n
useful <- c("age_group", "avg_age")
temp_data <- df_counts[, c("age_group", "avg_age")]
temp_data <- temp_data %>% group_by(age_group) %>%
dplyr::summarize(avg_age = mean(avg_age),.groups ='drop')
df_sim2 <- merge(x=df_sim,y=temp_data,
by="age_group", all.x=TRUE)
View(df_sim2)
df_sim2$age_group_s    <- cut(df_sim2$avg_age, breaks=c(0, 18, 50, 65, Inf), right=FALSE)
View(df_sim2$age_group_s)
View(df_sim2)
df_sim2$binary_patient_type <- as.integer(ifelse(df_sim2$binary_patient_type=="H", 1,0))
covars      <- c("comorbidity", "binary_patient_type", "covid", "count", "death")
covars      <- c("comorbidity", "binary_patient_type", "covid", "count", "death")
classification_vars <- c("age_group_s","avg_age", "sex")
simulation_vars <-c("exec")
df_sim2 <- df_sim2[,c(classification_vars, covars)]
df_sim2 <- merge(x=df_sim,y=temp_data,
by="age_group", all.x=TRUE)
df_sim2$age_group_s    <- cut(df_sim2$avg_age, breaks=c(0, 18, 50, 65, Inf), right=FALSE)
df_sim2$binary_patient_type <- as.integer(ifelse(df_sim2$binary_patient_type=="H", 1,0))
covars      <- c("comorbidity", "binary_patient_type", "covid", "count", "death")
classification_vars <- c("age_group_s","avg_age", "sex")
simulation_vars <-c("exec")
df_sim2 <- df_sim2[,c(simulation_vars, classification_vars, covars)]
View(df_sim2)
df_sim2 %>% group_by(sex) %>% dplyr::summarize(count_ = sum(count))
df_sim2 %>% group_by(exec, sex) %>% dplyr::summarize(count_ = sum(count))
df_sim2 %>% group_by(exec)
df_sim2 %>% group_by(exec, sex) %>% dplyr::summarize(count_ = sum(count))
df_sim2 %>% group_by(exec, sex) %>% dplyr::summarize(count_ = sum(count))%>%
group_by(sex) %>% dplyr::summarize(count_ = mean(count_))
df_sim2 %>% group_by(exec, sex) %>% dplyr::summarize(count_ = sum(count))%>%
group_by(sex) %>% dplyr::summarize(count_ = mean(count_))
df_sim2 %>% group_by(exec, sex) %>% dplyr::summarize(count_ = sum(count),
.groups='drop')%>%
group_by(sex) %>% dplyr::summarize(count_ = mean(count_))
df_sim_ <- df_sim2%>% group_by(exec, sex, age_group_s) %>%
dplyr::summarize( count_ = sum(count),
prob_comorbidity = sum(count*comorbidity)/sum(count),
prob_covid       = sum(count*covid)/sum(count),
prob_hospital    = sum(count*binary_patient_type)/sum(count),
prob_death       = sum(death)/sum(count),
.groups ='drop')
df_sim_
df_sim_ <- df_sim2%>% group_by(exec, sex, age_group_s) %>%
dplyr::summarize( count_ = sum(count),
prob_comorbidity = sum(count*comorbidity)/sum(count),
prob_covid       = sum(count*covid)/sum(count),
prob_hospital    = sum(count*binary_patient_type)/sum(count),
prob_death       = sum(death)/sum(count),
.groups ='drop')  %>%
group_by(sex, age_group_s) %>%
dplyr::summarize( count_ = mean(count_),
prob_comorbidity = mean(prob_comorbidity),
prob_covid       = mean(prob_covid),
prob_hospital    = mean(prob_hospital),
prob_death       = mean(prob_death),
.groups= 'drop')
df_sim_
View(df_sim_)
df_sim_means <- df_sim2%>% group_by(exec, sex, age_group_s) %>%
dplyr::summarize( count_ = sum(count),
prob_comorbidity = sum(count*comorbidity)/sum(count),
prob_covid       = sum(count*covid)/sum(count),
prob_hospital    = sum(count*binary_patient_type)/sum(count),
prob_death       = sum(death)/sum(count),
.groups ='drop')  %>%
group_by(sex, age_group_s) %>%
dplyr::summarize( count_ = mean(count_),
prob_comorbidity = mean(prob_comorbidity),
prob_covid       = mean(prob_covid),
prob_hospital    = mean(prob_hospital),
prob_death       = mean(prob_death),
.groups= 'drop')
df_sim_means
df_sim_stds <- df_sim2%>% group_by(exec, sex, age_group_s) %>%
dplyr::summarize( count_ = sum(count),
prob_comorbidity = sum(count*comorbidity)/sum(count),
prob_covid       = sum(count*covid)/sum(count),
prob_hospital    = sum(count*binary_patient_type)/sum(count),
prob_death       = sum(death)/sum(count),
.groups ='drop')  %>%
group_by(sex, age_group_s) %>%
dplyr::summarize( count_ = mean(count_),
prob_comorbidity = std(prob_comorbidity),
prob_covid       = std(prob_covid),
prob_hospital    = std(prob_hospital),
prob_death       = std(prob_death),
.groups= 'drop')
df_sim_stds <- df_sim2%>% group_by(exec, sex, age_group_s) %>%
dplyr::summarize( count_ = sum(count),
prob_comorbidity = sum(count*comorbidity)/sum(count),
prob_covid       = sum(count*covid)/sum(count),
prob_hospital    = sum(count*binary_patient_type)/sum(count),
prob_death       = sum(death)/sum(count),
.groups ='drop')  %>%
group_by(sex, age_group_s) %>%
dplyr::summarize( count_ = mean(count_),
prob_comorbidity = sd(prob_comorbidity),
prob_covid       = sd(prob_covid),
prob_hospital    = sd(prob_hospital),
prob_death       = sd(prob_death),
.groups= 'drop')
View(df_sim_)
View(df_sim_stds)
view(df_sim2)
View(df_sim2)
View(df_sim_means)
View(df_sim_stds)
View(df_sim_means)
write.csv(df_sim_means,
paste(path, "data/val_multbern_means.csv", sep = "/"))
write.csv(df_sim_stds,
paste(path, "data/val_multbern_stds.csv", sep="/"))
rm(list = ls(all.names = TRUE))
gc()
rm(list = ls(all.names = TRUE))
gc()
library(diagram)
library(heemod)
library(ggplot2)
path = "D:/GitHub/Paxlovid_MathematicalModel/data"
markov_params      <-read.csv(paste(path, "Final_PobSet.csv", sep = "/"))
survival_nomed     <- read.csv(paste(path, "Prob_Nomed_30days.csv", sep="/"))
survival_paxlovid  <- read.csv(paste(path, "Prob_Paxlovid_30days.csv", sep="/"))
survival_redemsivir<- read.csv(paste(path, "Prob_Redemsivir_30days.csv", sep="/"))
survival_nomed$patient_type <- as.integer(
ifelse(survival_nomed$patient_type=="H", 1,0))
